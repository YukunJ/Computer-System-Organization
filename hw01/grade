#!/usr/bin/env python2

from gradelib import *

r = Runner()

def matchtest(parent, name, points, *args, **kw):
    def do_test():
        r.match(*args, **kw)
    test(points, name, parent=parent)(do_test)

@test(0, "basic [part1.c]")
def test_part1():
    r.run_test("build/part1")
matchtest(test_part1, "incr", 2, "part1: incr OK")
matchtest(test_part1, "max", 3, "part1: max OK")

@test(0, "insertion sort [part2.c]")
def test_part2():
    r.run_test("build/part2")
matchtest(test_part2, "swap", 5, "part2: swap OK")
matchtest(test_part2, "insertion_sort", 5, "part2: insertion_sort OK")

@test(0, "prime sieves [part3.c]")
def test_part3():
    r.run_test("build/part3")
matchtest(test_part3, "initialize_array", 5, "part3: initialize_array OK")
matchtest(test_part3, "mark_multiples", 5, "part3: mark_multiples OK")
matchtest(test_part3, "prime_number_sieves", 5, "part3: prime_number_sieves OK")
matchtest(test_part3, "find_smallest_divisor", 5, "part3: find_smallest_divisor OK")

@test(0, "address structure [part4.c]")
def test_part4():
    r.run_test("build/part4")
matchtest(test_part4, "set_zip", 2, "part4: set_zip OK")
matchtest(test_part4, "set_city", 5, "part4: set_city OK")
matchtest(test_part4, "compare_addresses", 5, "part4: compare_addresses OK")

@test(0, "linked list [part5.c]")
def test_part5():
    r.run_test("build/part5")
matchtest(test_part5, "length", 3, "part5: length OK")
matchtest(test_part5, "last", 2, "part5: last OK")
matchtest(test_part5, "reverse", 5, "part5: reverse OK")

@test(0, "binary search tree [part6.c]")
def test_part6():
    r.run_test("build/part6")
matchtest(test_part6, "get_left", 1, "part6: get_left OK")
matchtest(test_part6, "get_right", 1, "part6: get_right OK")
matchtest(test_part6, "get_data", 1, "part6: get_data OK")
matchtest(test_part6, "insert", 5, "part6: insert OK")
matchtest(test_part6, "delete_min", 5, "part6: delete_min OK")
matchtest(test_part6, "delete", 7, "part6: delete OK")
matchtest(test_part6, "clear", 3, "part6: clear OK")

run_tests()
